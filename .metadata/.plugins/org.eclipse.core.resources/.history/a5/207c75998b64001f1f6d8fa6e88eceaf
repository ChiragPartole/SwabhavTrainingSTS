package com.techlabs.bankapp.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.techlabs.bankapp.dto.AccountDto;
import com.techlabs.bankapp.dto.PageResponse;
import com.techlabs.bankapp.entity.Account;

import com.techlabs.bankapp.repository.AccountRepository;
import com.techlabs.cashmgmt.dto.UserDto;
import com.techlabs.cashmgmt.entity.User;

@Service
public class AccountServiceImpl implements AccountService{

	@Autowired
	private AccountRepository accountRepo;
	
	private Account toAccountMapper(AccountDto accountDto) {
		Account account = new Account();
		account.setAccountNumber(accountDto.getAccountNumber());
		account.setBalance(accountDto.getBalance());
		
		return account;
	}
	
	private AccountDto toAccountDtoMapper(Account account) {
		AccountDto accountDto = new AccountDto();
		accountDto.setAccountNumber(account.getAccountNumber());
		accountDto.setBalance(account.getBalance());
		
		return accountDto;
	}
	
	@Override
	public PageResponse<AccountDto> viewAllAccounts(int pageNoValue, int pageSizeValue) {
		Pageable pageable = PageRequest.of(pageNoValue, pageSizeValue);
		Page<Account> accountPage = accountRepo.findAll(pageable);
		PageResponse<AccountDto> response = new PageResponse<AccountDto>();
		
		response.setTotalPages(accountPage.getTotalPages());
		response.setTotalElements(accountPage.getTotalElements());
		response.setSize(accountPage.getSize());
		response.setLastPage(accountPage.isLast());
		
		List<AccountDto> accountDtoList = new ArrayList<>();
		
		accountPage.getContent().forEach((user)->{
			AccountDto userdto = toAccountDtoMapper(user);
			
			accountDtoList.add(userdto);
		});
		
		response.setContent(accountDtoList);
		return response;
	}

	@Override
	public AccountDto addAccount(AccountDto accountDto) {
		Account account = toAccountMapper(accountDto);
		accountRepo.save(account);
		return toAccountDtoMapper(account);
	}

	@Override
	public Account updateAccount(AccountDto accountDto) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteAccount(int accountID) {
		accountRepo.deleteById(accountID);
		
	}

}
